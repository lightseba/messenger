{"version":3,"file":"kotlin-react-router-dom.js","sources":["../../../src/main/kotlin/react/router/dom/routingDsl.kt","../../../src/main/kotlin/react/RBuilder.kt"],"sourcesContent":["package react.router.dom\n\nimport react.*\nimport kotlin.reflect.*\n\nfun RBuilder.hashRouter(handler: RHandler<RProps>) = child(HashRouterComponent::class, handler)\n\nfun RBuilder.browserRouter(handler: RHandler<RProps>) = child(BrowserRouterComponent::class, handler)\n\nfun RBuilder.switch(handler: RHandler<RProps>) = child(SwitchComponent::class, handler)\n\nfun RBuilder.route(\n    path: String,\n    component: KClass<out Component<*, *>>,\n    exact: Boolean = false,\n    strict: Boolean = false\n): ReactElement {\n    return child<RouteProps<RProps>, RouteComponent<RProps>> {\n        attrs {\n            this.path = path\n            this.exact = exact\n            this.strict = strict\n            this.component = component.js.unsafeCast<RClass<RProps>>()\n        }\n    }\n}\n\nfun <T : RProps> RBuilder.route(\n    path: String,\n    exact: Boolean = false,\n    strict: Boolean = false,\n    render: (props: RouteResultProps<T>) -> ReactElement?\n): ReactElement {\n    return child<RouteProps<T>, RouteComponent<T>> {\n        attrs {\n            this.path = path\n            this.exact = exact\n            this.strict = strict\n            this.render = render\n        }\n    }\n}\n\nfun RBuilder.route(\n    path: String,\n    exact: Boolean = false,\n    strict: Boolean = false,\n    render: () -> ReactElement?\n): ReactElement {\n    return child<RouteProps<RProps>, RouteComponent<RProps>> {\n        attrs {\n            this.path = path\n            this.exact = exact\n            this.strict = strict\n            this.render = { render() }\n        }\n    }\n}\n\nfun RBuilder.routeLink(\n    to: String,\n    replace: Boolean = false,\n    className: String? = null,\n    handler: RHandler<RProps>?\n) = child(LinkComponent::class) {\n    attrs {\n        this.to = to\n        this.replace = replace\n        this.className = className\n    }\n    handler?.invoke(this)\n}\n\nfun RBuilder.navLink(\n    to: String,\n    replace: Boolean = false,\n    className: String? = null,\n    activeClassName: String = \"active\",\n    exact: Boolean = false,\n    strict: Boolean = false,\n    isActive: (() -> Unit)? = null,\n    handler: RHandler<RProps>?\n) = child(NavLinkComponent::class) {\n    attrs {\n        this.to = to\n        this.replace = replace\n        this.className = className\n        this.activeClassName = activeClassName\n        this.exact = exact\n        this.strict = strict\n        this.isActive = isActive\n    }\n    handler?.invoke(this)\n}\n\nfun RBuilder.redirect(\n    from: String,\n    to: String,\n    push: Boolean = false,\n    exact: Boolean = false,\n    strict: Boolean = false\n) = child(RedirectComponent::class) {\n    attrs {\n        this.from = from\n        this.to = to\n        this.push = push\n        this.exact = exact\n        this.strict = strict\n    }\n}\n","package react\n\nimport kotlinext.js.*\nimport kotlin.reflect.*\n\n@DslMarker\nannotation class ReactDsl\n\n@ReactDsl\nopen class RBuilder {\n    val childList = mutableListOf<Any>()\n\n    fun child(element: ReactElement): ReactElement {\n        childList.add(element)\n        return element\n    }\n\n    operator fun String.unaryPlus() {\n        childList.add(this)\n    }\n\n    fun <P : RProps> child(type: Any, props: P, children: List<Any>) =\n        child(createElement(type, props, *children.toTypedArray()))\n\n    fun <P : RProps> child(type: Any, props: P, handler: RHandler<P>): ReactElement {\n        val children = with(RElementBuilder(props)) {\n            handler()\n            childList\n        }\n        return child(type, props, children)\n    }\n\n    operator fun <P : RProps> RClass<P>.invoke(handler: RHandler<P>) =\n        child(this, jsObject {}, handler)\n\n    operator fun <T> RProvider<T>.invoke(value: T, handler: RHandler<RProviderProps<T>>) =\n        child(this, jsObject { this.value = value }, handler)\n\n    operator fun <T> RConsumer<T>.invoke(handler: RBuilder.(T) -> Unit) =\n        child(this, jsObject<RConsumerProps<T>> {\n            this.children = { value ->\n                buildElements { handler(value) }\n            }\n        }) {}\n\n    fun <P : RProps> RClass<P>.node(\n        props: P,\n        children: List<Any> = emptyList()\n    ) = child(this, clone(props), children)\n\n    fun <P : RProps, C : Component<P, *>> child(klazz: KClass<C>, handler: RHandler<P>): ReactElement {\n        val rClass = klazz.js as RClass<P>\n        return rClass(handler)\n    }\n\n    inline fun <P : RProps, reified C : Component<P, *>> child(noinline handler: RHandler<P>) =\n        child(C::class, handler)\n\n    fun <P : RProps, C : Component<P, *>> node(\n        klazz: KClass<C>,\n        props: P,\n        children: List<Any> = emptyList()\n    ): ReactElement {\n        val rClass = klazz.js as RClass<P>\n        return rClass.node(props, children)\n    }\n\n    inline fun <P : RProps, reified C : Component<P, *>> node(props: P, children: List<Any> = emptyList()) =\n        node(C::class, props, children)\n\n    fun RProps.children() {\n        childList.addAll(Children.toArray(children))\n    }\n}\n\nopen class RBuilderMultiple : RBuilder() {\n}\n\nfun buildElements(handler: RBuilder.() -> Unit): dynamic {\n    val nodes = RBuilder().apply(handler).childList\n    return when {\n        nodes.size == 0 -> null\n        nodes.size == 1 -> nodes.first()\n        else -> createElement(Fragment, js {}, *nodes.toTypedArray())\n    }\n}\n\nopen class RBuilderSingle : RBuilder() {\n}\n\ninline fun buildElement(handler: RBuilder.() -> Unit): ReactElement? =\n    RBuilder().apply(handler).childList.first() as ReactElement?\n\nopen class RElementBuilder<out P : RProps>(open val attrs: P) : RBuilder() {\n    fun attrs(handler: P.() -> Unit) {\n        attrs.handler()\n    }\n\n    var key: String\n        get() = attrs.key\n        set(value) {\n            attrs.key = value\n        }\n\n    var ref: RRef\n        get() = attrs.ref\n        set(value) {\n            attrs.ref = value\n        }\n\n    fun ref(handler: (dynamic) -> Unit) {\n        attrs.ref(handler)\n    }\n}\n\ntypealias RHandler<P> = RElementBuilder<P>.() -> Unit\n\nfun <P : RProps> forwardRef(handler: RBuilder.(RProps, RRef) -> Unit): RClass<P> {\n    return rawForwardRef { props, ref ->\n        buildElements { handler(props, ref) }\n    }\n}\n\ntypealias FunctionalComponent<P> = (props: P) -> dynamic\n\n/**\n * Get functional component from [func]\n */\nfun <P : RProps> functionalComponent(\n    func: RBuilder.(props: P) -> Unit\n): FunctionalComponent<P> {\n    return { props: P ->\n        buildElements {\n            func(props)\n        }\n    }\n}\n\n/**\n * Append functional component [functionalComponent] as child of current builder\n */\nfun <P : RProps> RBuilder.child(\n    functionalComponent: FunctionalComponent<P>,\n    props: P = jsObject {},\n    handler: RHandler<P> = {}\n): ReactElement {\n    return child(functionalComponent, props, handler)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;EAKA,wC;IAAqD,+DAAkC,OAAlC,C;G;EAErD,2C;IAAwD,kEAAqC,OAArC,C;G;EAExD,sC;IAAiD,2DAA8B,OAA9B,C;G;EASnC,6F;IAAA,4B;MACF,iBAAY,Y;MACZ,kBAAa,a;MACb,mBAAc,c;MACd,sBAA2B,OAAV,iBAAU,C;MAC/B,W;IAAA,C;G;EANqD,sF;IAAA,4B;MACrD,wBAAM,mFAAN,C;MAMJ,W;IAAA,C;G;EAbJ,0D;IAGI,qB;MAAA,QAAiB,K;IACjB,sB;MAAA,SAAkB,K;IAElB,OCuCI,mDDvCqD,4CCuCrD,C;ED/BR,C;EASc,4F;IAAA,4B;MACF,iBAAY,Y;MACZ,kBAAa,a;MACb,mBAAc,c;MACd,mBAAc,c;MAClB,W;IAAA,C;G;EAN2C,qF;IAAA,4B;MAC3C,wBAAM,kFAAN,C;MAMJ,W;IAAA,C;G;EAbJ,yD;IAEI,qB;MAAA,QAAiB,K;IACjB,sB;MAAA,SAAkB,K;IAGlB,OCuBI,mDDvB2C,2CCuB3C,C;EDfR,C;EAa0B,oD;IAAA,qB;MAAE,uB;IAAS,C;G;EAJvB,4F;IAAA,4B;MACF,iBAAY,Y;MACZ,kBAAa,a;MACb,mBAAc,c;MACd,mBAAc,0C;MAClB,W;IAAA,C;G;EANqD,qF;IAAA,4B;MACrD,wBAAM,kFAAN,C;MAMJ,W;IAAA,C;G;EAbJ,yD;IAEI,qB;MAAA,QAAiB,K;IACjB,sB;MAAA,SAAkB,K;IAGlB,OCOI,mDDPqD,2CCOrD,C;EDCR,C;EAQU,iF;IAAA,4B;MACF,eAAU,U;MACV,oBAAe,e;MACf,sBAAiB,iB;MACrB,W;IAAA,C;G;EAL4B,2F;IAAA,4B;MAC5B,wBAAM,uEAAN,C;MAKA,0CAAgB,SAAhB,Q;MACJ,W;IAAA,C;G;EAZA,+D;IAEI,uB;MAAA,UAAmB,K;IACnB,yB;MAAA,YAAqB,I;IAErB,yDAA4B,iDAA5B,C;G;EAmBM,yJ;IAAA,4B;MACF,eAAU,U;MACV,oBAAe,e;MACf,sBAAiB,iB;MACjB,4BAAuB,uB;MACvB,kBAAa,a;MACb,mBAAc,c;MACd,qBAAgB,gB;MACpB,W;IAAA,C;G;EAT+B,mK;IAAA,4B;MAC/B,wBAAM,+IAAN,C;MASA,0CAAgB,SAAhB,Q;MACJ,W;IAAA,C;G;EApBA,uG;IAEI,uB;MAAA,UAAmB,K;IACnB,yB;MAAA,YAAqB,I;IACrB,+B;MAAA,kBAA0B,Q;IAC1B,qB;MAAA,QAAiB,K;IACjB,sB;MAAA,SAAkB,K;IAClB,wB;MAAA,WAA0B,I;IAE1B,4DAA+B,yFAA/B,C;G;EAoBM,uG;IAAA,4B;MACF,iBAAY,Y;MACZ,eAAU,U;MACV,iBAAY,Y;MACZ,kBAAa,a;MACb,mBAAc,c;MAClB,W;IAAA,C;G;EAPgC,gG;IAAA,4B;MAChC,wBAAM,6FAAN,C;MAOJ,W;IAAA,C;G;EAdA,4D;IAGI,oB;MAAA,OAAgB,K;IAChB,qB;MAAA,QAAiB,K;IACjB,sB;MAAA,SAAkB,K;IAClB,6DAAgC,8CAAhC,C;G;;;;;;;;;;;;;;;;;"}